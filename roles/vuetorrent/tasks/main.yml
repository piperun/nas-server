---
# roles/vuetorrent/tasks/main.yml

- name: "Validate VueTorrent configuration"
  ansible.builtin.assert:
    that:
      - vuetorrent_username is defined
      - vuetorrent_password is defined
    fail_msg: "VueTorrent username and password must be defined"
    success_msg: "VueTorrent configuration validated"

- name: "Create VueTorrent config directory"
  ansible.builtin.file:
    path: "{{ vuetorrent_config_path }}"
    state: directory
    mode: '0755'
    owner: "1000"
    group: "1000"

- name: "Create VueTorrent downloads directory"
  ansible.builtin.file:
    path: "{{ vuetorrent_downloads_path }}"
    state: directory
    mode: '0755'
    owner: "1000"
    group: "1000"

- name: "Check if VueTorrent web UI port is already enabled"
  ansible.builtin.command: firewall-cmd --query-port={{ vuetorrent_webui_port }}/tcp
  register: vuetorrent_webui_firewall
  changed_when: false
  failed_when: false

- name: "Check if VueTorrent torrent TCP port is already enabled"
  ansible.builtin.command: firewall-cmd --query-port={{ vuetorrent_torrent_port }}/tcp
  register: vuetorrent_torrent_tcp_firewall
  changed_when: false
  failed_when: false

- name: "Check if VueTorrent torrent UDP port is already enabled"
  ansible.builtin.command: firewall-cmd --query-port={{ vuetorrent_torrent_port }}/udp
  register: vuetorrent_torrent_udp_firewall
  changed_when: false
  failed_when: false

- name: "Allow VueTorrent web UI traffic through the firewall"
  ansible.posix.firewalld:
    port: "{{ vuetorrent_webui_port }}/tcp"
    permanent: true
    state: enabled
    immediate: true
  when: not vuetorrent_webui_firewall.stdout | bool

- name: "Allow VueTorrent torrent TCP traffic through the firewall"
  ansible.posix.firewalld:
    port: "{{ vuetorrent_torrent_port }}/tcp"
    permanent: true
    state: enabled
    immediate: true
  when: not vuetorrent_torrent_tcp_firewall.stdout | bool

- name: "Allow VueTorrent torrent UDP traffic through the firewall"
  ansible.posix.firewalld:
    port: "{{ vuetorrent_torrent_port }}/udp"
    permanent: true
    state: enabled
    immediate: true
  when: not vuetorrent_torrent_udp_firewall.stdout | bool

- name: "Template the VueTorrent Quadlet unit file"
  ansible.builtin.template:
    src: "vuetorrent.container.j2"
    dest: "{{ vuetorrent_quadlet_dir }}/{{ vuetorrent_container_name }}.container"
    mode: '0644'
  notify: Restart vuetorrent container

- name: "Enable and start the VueTorrent service"
  ansible.builtin.systemd:
    name: "{{ vuetorrent_container_name }}.service"
    enabled: true
    state: started
    daemon_reload: true

- name: "Wait for VueTorrent to start"
  ansible.builtin.wait_for:
    port: "{{ vuetorrent_webui_port }}"
    host: "localhost"
    delay: 10
    timeout: 60

- name: "Display VueTorrent access information"
  ansible.builtin.debug:
    msg: |
      VueTorrent is now running!
      
      Web Interface: http://{{ ansible_default_ipv4.address }}:{{ vuetorrent_webui_port }}
      Username: {{ vuetorrent_username }}
      Password: [configured via vault]
      
      Download directory: {{ vuetorrent_downloads_path }}
      Config directory: {{ vuetorrent_config_path }}
      
      Torrent port: {{ vuetorrent_torrent_port }}
